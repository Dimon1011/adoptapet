{"version":3,"sources":["components/Pets.js","components/results.js","components/usedropdown.js","components/ThemeContext.js","components/searchparams.js","components/carousel.js","components/ErrorBoundary.js","modal.js","components/details.js","App.js","serviceWorker.js","index.js"],"names":["Pets","name","animal","breed","media","location","id","hero","length","small","to","className","src","alt","Results","pets","map","pet","type","key","breeds","primary","photos","contact","address","city","state","useDropdown","label","defaultState","options","useState","setState","replace","toLowerCase","htmlFor","value","onChange","event","target","disabled","item","ThemeContext","createContext","SearchParams","setLocation","setBreeds","ANIMALS","AnimalDropdown","BreedDropdown","setBreed","setPets","useContext","theme","setTheme","a","animals","useEffect","then","breedStrings","onSubmit","preventDefault","requestPets","placeholder","style","backgroundColor","Carousel","active","handleIndexClick","dataset","index","this","photo","onClick","data-index","large","React","Component","ErrorBoundary","hasError","redirect","error","info","console","setTimeout","props","children","Modal","elRef","useRef","current","div","document","createElement","modalRoot","getElementById","appendChild","removeChild","createPortal","Details","loading","showModal","toggleModal","adopt","navigate","url","description","Consumer","themeHook","DetailsWithErrorBoundary","App","themehook","Provider","path","Boolean","window","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.27499513.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from '@reach/router';\r\n\r\nexport default function Pets({name, animal, breed, media, location, id}) {\r\n    let hero = 'http://placecorgi.com/300/300';\r\n    if(media.length){\r\n        hero = media[0].small;\r\n    }\r\n\r\n    return (\r\n        <Link to={`/details/${id}`} className='pet'>\r\n            <div className='image-container'>\r\n                <img src={hero} alt={name}/>\r\n            </div>\r\n            <div className='info'>\r\n            <h1>{name}</h1>\r\n            <h2>{`${animal} - ${breed} - ${location}`}</h2>\r\n\r\n            </div>\r\n        </Link>\r\n    )\r\n}","import React from 'react';\r\nimport Pets from './Pets';\r\n\r\nconst Results = ({ pets }) => {\r\n    return (\r\n        <div className='search'>\r\n            {pets.length === 0 ? (<h1>No Pets Found</h1>) : (pets.map(pet => (\r\n                <Pets \r\n                animal={pet.type} \r\n                key={pet.id}\r\n                name={pet.name}\r\n                breed={pet.breeds.primary}\r\n                media={pet.photos}\r\n                location={`${pet.contact.address.city}, ${pet.contact.address.state}`}\r\n                id={pet.id}/>)))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Results;","import React, {useState} from 'react';\r\n\r\nconst useDropdown = (label, defaultState, options) => {\r\n    const [state, setState] = useState(defaultState);\r\n    const id = `user-dropdown-${label.replace(\" \", \" \").toLowerCase()}`\r\n    const Dropdown = () => (\r\n        <label htmlFor={id}>\r\n            {label}\r\n            <select\r\n            id={id}\r\n            value={state}\r\n            onChange={event => setState(event.target.value)}\r\n            disabled={options.length === 0}>\r\n                <option>All</option>\r\n                {options.map(item => (<option key={item} value={item}>{item}</option>))}\r\n            </select>\r\n        </label>\r\n    );\r\n    return [state, Dropdown, setState];\r\n};\r\n\r\nexport default useDropdown;","import { createContext } from 'react';\r\n\r\nconst ThemeContext = createContext(['green', () => {}]);\r\n\r\nexport default ThemeContext;","import React, { useState, useEffect, useContext } from 'react';\r\nimport pet, {ANIMALS} from '@frontendmasters/pet';\r\nimport Results from './results';\r\nimport useDropdown from './usedropdown';\r\nimport ThemeContext from './ThemeContext';\r\n\r\nconst SearchParams = () => {\r\n    //this is a hook, all hooks beging with \"USE\"\r\n    const [location, setLocation] = useState('Seattle, WA');\r\n    const [breeds, setBreeds] = useState([]);\r\n    const [animal, AnimalDropdown] = useDropdown(\"Animal\", \"dog\", ANIMALS);\r\n    const [breed, BreedDropdown, setBreed] = useDropdown(\"Breed\", \"\", breeds);\r\n    const [pets, setPets] = useState([]);\r\n    const [theme, setTheme] = useContext(ThemeContext);\r\n    \r\n    async function requestPets(){\r\n        const { animals } = await pet.animals({\r\n            location,\r\n            breed,\r\n            type: animal\r\n        });\r\n\r\n        setPets(animals || []);\r\n    }\r\n\r\n    useEffect (() => {\r\n        setBreeds([]);\r\n        setBreed('');\r\n\r\n       pet.breeds(animal).then(({breeds}) => {\r\n           const breedStrings = breeds.map(({name}) => name);\r\n           setBreeds(breedStrings);\r\n       })\r\n    }, [animal, setBreed, setBreeds]);\r\n\r\n    return (\r\n        <div className='search-params'>\r\n            <h3>{location}</h3>\r\n            <form onSubmit={(event) => {\r\n                event.preventDefault();\r\n                requestPets();\r\n            }}>\r\n                <label htmlFor='location'>Location <input \r\n                id='location' \r\n                value={location} \r\n                placeholder=\"Enter location\"\r\n                onChange={event => setLocation(event.target.value)}\r\n                />\r\n                </label>\r\n                <div className='pad1'></div>\r\n                <AnimalDropdown/>\r\n                <div className='pad1'></div>\r\n                <BreedDropdown/>\r\n                <div className='pad1'></div>\r\n                <label htmlFor='theme'>\r\n                Theme {\" \"}\r\n                <select value={theme} \r\n                        onChange={event => setTheme(event.target.value)}>\r\n                <option value='peru'>Peru</option>\r\n                <option value='darkblue'>Dark Blue</option>\r\n                <option value='mediumorchid'>Medium Orchid</option>\r\n                <option value='chartreuse'>Chartreuse</option>\r\n                </select>\r\n                </label>\r\n                <button style={{backgroundColor: theme}}> Submit</button>\r\n                \r\n            </form>\r\n            <Results pets={pets}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n                // {/* <label htmlFor='animal'>Animal <select \r\n                // id='animal' \r\n                // value={animal} \r\n                // onChange={event => setAnimal(event.target.value)}>\r\n                //     <option>All</option>\r\n                //     {ANIMALS.map(animal => (<option key={animal} value={animal}>{animal}</option>))}\r\n                // </select>\r\n                // </label>\r\n                // <label htmlFor='breed'>Breed <select \r\n                // id='breed' \r\n                // value={breed} \r\n                // onChange={event => setBreed(event.target.value)}\r\n                // disabled={!breeds.length}>\r\n                //     <option>All</option>\r\n                //     {breeds.map(breed => (<option key={breed} value={breed}>{breed}</option>))}\r\n                // </select>\r\n                // </label> */}\r\nexport default SearchParams;","import React from 'react';\r\n\r\nclass Carousel extends React.Component {\r\n    state = {\r\n        photos: [],\r\n        active: 0\r\n    };\r\n    static getDerivedStateFromProps({media}) {\r\n        let photos = ['http://placecorgi.com/600/600'];\r\n        if (media.length) {\r\n            photos = media.map(({large}) => large);\r\n        }\r\n        return {photos};\r\n       \r\n        }\r\n        handleIndexClick = event => {\r\n            this.setState({\r\n                active: +event.target.dataset.index\r\n            });\r\n    }\r\n    render(){\r\n        const {photos, active} = this.state;\r\n\r\n        return (\r\n            <div className='carousel'>\r\n            <img src={photos[active]} alt='animal'/>\r\n            <div className='carousel-smaller'>\r\n                {photos.map((photo, index) => (\r\n                    <img key={photo} \r\n                    onClick={this.handleIndexClick} \r\n                    data-index={index} \r\n                    src={photo} \r\n                    className={index === active ? 'active' : ''} \r\n                    alt=\"animal thumbnail\"/>\r\n                ))}\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Carousel;","import React, {Component} from 'react';\r\nimport {Link, Redirect} from '@reach/router';\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = { hasError: false,\r\n              redirect: false }\r\n    static getDerivedStateFromError () {\r\n        return {hasError: true};\r\n    }\r\n    componentDidCatch(error, info) {\r\n        console.error('ErrorBoundary caught an error', error, info);\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.state.hasError) {\r\n            setTimeout(() => this.setState({redirect:true}), 5000);\r\n        }\r\n    }\r\n    render () {\r\n        if(this.state.redirect) {\r\n            return <Redirect to='/' />;\r\n        }\r\n        if (this.state.hasError) {\r\n            return (\r\n                <h1>There was an error with this listing. <Link to='/'>Click here</Link> to go back\r\n                {\" \"}\r\n                to the home page or wait five seconds.</h1>\r\n            )\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React, {useEffect, useRef } from 'react';\r\nimport {createPortal} from 'react-dom';\r\n\r\n\r\n\r\nconst Modal = ({children}) => {\r\n    const elRef = useRef(null);\r\n    if (!elRef.current) {\r\n        const div = document.createElement('div');\r\n        elRef.current = div;\r\n    }\r\n\r\n    useEffect(() => {\r\n        const modalRoot = document.getElementById('modal');\r\n        modalRoot.appendChild(elRef.current);\r\n        return () => modalRoot.removeChild(elRef.current);\r\n    }, []);\r\n\r\n    return createPortal(<div>{children}</div>, elRef.current);\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport pet from '@frontendmasters/pet';\r\nimport Carousel from './carousel';\r\nimport ErrorBoundary from './ErrorBoundary';\r\nimport ThemeContext from './ThemeContext';\r\nimport {navigate} from '@reach/router';\r\nimport Modal from '../modal';\r\n\r\n\r\nclass Details extends React.Component {\r\n \r\n    state = {loading:true, showModal:false};\r\n    // constructor(props){\r\n    //     super(props);\r\n    //     this.state = {\r\n    //         loading: true\r\n    //     }\r\n    // }\r\n    componentDidMount () {\r\n        pet.animal(this.props.id).then(({animal}) => {\r\n            this.setState({\r\n                url: animal.url,\r\n                name: animal.name,\r\n                animal: animal.type,\r\n                location: `${animal.contact.address.city}, ${animal.contact.address.state}`,\r\n                description: animal.description,\r\n                media: animal.photos,\r\n                breed: animal.breeds.primary,\r\n                loading: false\r\n            })\r\n        })\r\n    \r\n    }\r\n\r\n    toggleModal = () => this.setState({showModal: !this.state.showModal});\r\n    adopt = () => navigate(this.state.url);\r\n\r\n    render () {\r\n        if(this.state.loading){\r\n            return <h1>Loading...</h1>\r\n        }\r\n\r\n        const {animal, breed, location, description, name, media, showModal} = this.state;\r\n        return(\r\n            <div className='details'>\r\n            <Carousel media={media}/>\r\n                <div>\r\n                <h1>{name}</h1>\r\n                <h2>{`${animal} - ${breed} - ${location}`}</h2>\r\n                <ThemeContext.Consumer>\r\n                    {(themeHook) => (\r\n                        <button \r\n                        onClick={this.toggleModal}\r\n                        style={{backgroundColor: themeHook[0]}}>Adopt {name}</button>\r\n                    )}\r\n                </ThemeContext.Consumer>\r\n                <p>{description}</p>\r\n                {\r\n                    showModal ? (<Modal>\r\n                        <div>\r\n                            <h1>Would you like to adopt {name}?</h1>\r\n                            <div className='buttons'>\r\n                                <button onClick={this.adopt}>Yes</button>\r\n                                <button onClick={this.toggleModal}>No</button>\r\n                            </div>\r\n                        </div>\r\n                    </Modal>) : null\r\n                }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default function DetailsWithErrorBoundary(props) {\r\n    return(\r\n        <ErrorBoundary>\r\n            <Details {... props}/>\r\n        </ErrorBoundary>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport SearchParams from './components/searchparams';\nimport {Router, Link} from '@reach/router';\nimport Details from './components/details';\nimport ThemeContext from './components/ThemeContext';\nimport 'animate.css';\n\n\n\n// class App extends Component {\n\n//   // constructor(){\n//   //   super()\n//   // }\n//   render ()\nconst App = () => {\n  const themehook = useState('darkblue');\n  return (\n    <ThemeContext.Provider value={themehook}>\n    <div>\n    <Link to='/'><h1 id='anim' \n    className=\"animate__animated animate__headShake animate__repeat-3\">Adopt Me!</h1></Link>\n    <Router>\n      <SearchParams path='/'/>\n      <Details path='/details/:id'/>\n     </Router> \n    </div>\n    </ThemeContext.Provider>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n  <div className='App'>\n    <App />\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}